apiVersion: apps/v1
kind: Deployment
metadata:
  name: securityai-backend
  namespace: securityai
  labels:
    app: securityai-backend
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: securityai-backend
  template:
    metadata:
      labels:
        app: securityai-backend
        version: v1.0.0
    spec:
      containers:
      - name: securityai-backend
        image: securityai/backend:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: securityai-secrets
              key: postgres-host
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: securityai-secrets
              key: postgres-password
        - name: INFLUXDB_TOKEN
          valueFrom:
            secretKeyRef:
              name: securityai-secrets
              key: influxdb-token
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: securityai-secrets
              key: elasticsearch-password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: securityai-secrets
              key: secret-key
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: securityai-secrets
              key: redis-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: uploads-storage
          mountPath: /app/uploads
        - name: logs-storage
          mountPath: /app/logs
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: securityai-models-pvc
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: securityai-uploads-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: securityai-logs-pvc
      imagePullSecrets:
      - name: securityai-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: securityai-backend-service
  namespace: securityai
spec:
  selector:
    app: securityai-backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: securityai-backend-hpa
  namespace: securityai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: securityai-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: securityai-backend-ingress
  namespace: securityai
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.securityai.com
    secretName: securityai-tls
  rules:
  - host: api.securityai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: securityai-backend-service
            port:
              number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: securityai-models-pvc
  namespace: securityai
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: securityai-uploads-pvc
  namespace: securityai
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: securityai-logs-pvc
  namespace: securityai
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: gp2 